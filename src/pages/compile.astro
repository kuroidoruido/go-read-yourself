---
import {
  copy as copyIcon,
  listChecks as listChecksIcon,
} from "lucide-static/lib";
import Layout from "../layouts/Layout.astro";
import { NewsService } from "../services/news.service";
import { UserService } from "../services/user.service";
import { compilePostsAsFormattedMarkdown } from "../utils/compile.util";
import { ConfigService } from "../services/config.service";

const isAdmin = UserService.isConnectedAsAdmin(
  (name) => Astro.cookies.get(name)?.value
);

if (!isAdmin) {
  return Astro.redirect("/");
}

if (Astro.url.searchParams.has("markAsCompiled")) {
  const postToMarkAsCompiled = Astro.url.searchParams
    .get("markAsCompiled")!
    .split(",");
  console.log("Mark as compiled", postToMarkAsCompiled);
  NewsService.markPostsAsCompiled(postToMarkAsCompiled);
}

const postsToCompile = NewsService.getPostsToCompile();
const postIdsToCompile = postsToCompile.map((post) => post.id);
const mardownFile = compilePostsAsFormattedMarkdown(
  postsToCompile,
  ConfigService.getConfig().compile
);
---

<Layout noFAB>
  <div class="actions">
    <button class="btn" id="copy-btn">
      <span set:html={copyIcon} />
      <span>Copy</span>
    </button>
    <a
      class="btn"
      role="button"
      id="mark-compiled-btn"
      href={`/compile?markAsCompiled=${postIdsToCompile.join(",")}`}
    >
      <span set:html={listChecksIcon} />
      <span>Mark as compiled</span>
    </a>
  </div>
  <textarea set:html={mardownFile} id="compiled-textarea" />
</Layout>

<style>
  .actions {
    width: 90vw;
    margin: 2rem auto;
    display: flex;
    gap: 8px;
  }
  textarea {
    width: 90vw;
    height: 80vh;
    margin: 2rem auto;
    display: block;
  }
</style>

<script>
  document
    .querySelector<HTMLButtonElement>("#copy-btn")
    ?.addEventListener("click", () => {
      const textarea =
        document.querySelector<HTMLTextAreaElement>("#compiled-textarea");
      if (textarea && textarea.textContent) {
        navigator.clipboard.writeText(textarea.textContent);
      }
    });
</script>
