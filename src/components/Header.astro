---
import { Icon } from "astro-icon/components";
import { UserService } from "../services/user.service";
import { NewsService } from "../services/news.service";

interface Props {
  title: string;
}

const { title } = Astro.props;
const isConnected = UserService.isConnectedAsAdmin(
  (name) => Astro.cookies.get(name)?.value
);

const postToCompileCount = NewsService.getPostsToCompile().length;
---

<header>
  <a class="title" href="/">
    <Icon name="lucide:home" aria-hidden="true" />
    <span class="text">{title}</span>
  </a>
  <div class="right-part">
    <a href="/feed.xml">
      <Icon name="lucide:rss" aria-hidden="true" />
      <span class="text">RSS</span>
    </a>
    {
      isConnected && (
        <>
          <a href="/compile">
            <Icon name="lucide:newspaper" aria-hidden="true" />
            <span class="text">Compile</span>
            <span class="extra">({postToCompileCount})</span>
          </a>
          <a href="/info">
            <Icon name="lucide:info" aria-hidden="true" />
            <span class="text">Info</span>
          </a>
          <a href="/signout">
            <Icon name="lucide:log-out" aria-hidden="true" />
            <span class="text">Sign out</span>
          </a>
        </>
      )
    }
  </div>
</header>

<style>
  header {
    background-color: var(--card--background-color);
    box-shadow: 1px 1px 15px var(--border-shadow);
    padding: 16px 64px;
    display: flex;
    justify-content: space-between;
  }
  header .right-part {
    display: flex;
    gap: 1rem;
  }
  header a,
  header a:visited {
    color: var(--page--text-color);
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 4px;

    svg[data-icon] {
      height: 1.5rem;
      width: 1.5rem;
    }
  }

  @media (width < 700px) {
    header {
      a.title svg[data-icon] {
        display: unset;
      }
      a span.text {
        display: none;
      }
    }
  }
</style>
